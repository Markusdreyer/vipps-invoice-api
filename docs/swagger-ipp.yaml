swagger: '2.0'
info:
  title: Vipps Invoice IPP API
  version: '0.3.0'
  description: >-
    This is the API for Vipps Regninger. While we have worked closely with
    selected partners, and believe that this is very close to production
    quality, we are more than happy to receive feedback, either with GitHub's
    issue functionality, or by email.

    # API documentation

    Please see https://github.com/vippsas/vipps-invoice-api/blob/master/vipp-invoice-api.md

    # Invoice states

    * `created`: Invoice has been inserted, but not yet validated, and not yet shown to the recipient.

    * `rejected`: Invoice could not be validated, and is rejected.

    * `pending`: Invoice needs to be processed by the recipient.

    * `expired`: Recipient did not process the invoice in time.

    * `approved`: Invoice has been approved by recipient.

    * `deleted`: Invoice has been deleted.

    * `revoked`: Invoice has been revoked by the ISP.

    See the `PUT:/invoices/{invoiceId}/status/{state}` methods for details about changing the `state`.


    # Changelog

    ## 0.3.0

    * Updated authentication info for APIM (manual "merge").

    ## 0.2.28

    * Fix: Replaced `new` with `created`.

    ## 0.2.26

    * Updated information about test users.

    ## 0.2.25

    * Replaced introduction text with link to documentation.

    ## 0.2.24

    * * Corrected documentation of `state` for invoices, and some minor text tweaks.

    ## 0.2.23

    * Improved documentation for Ã¬nvoiceId`.

    ## 0.2.22

    * fix: the token returned from `GET:/recipients/tokens` is now returned
      as a proper json document with the field `recipientToken`
    * extended the datamodel for errors. Error returned by the API will now
      include the required fields `type` and `title` plus the optional fields
      `detail` and `instance`. The content of the field is according to
      [RFC7807](https://tools.ietf.org/html/rfc7807)
host: apitest.vipps.no
basePath: /vipps-ipp/v1
tags:
  - name: IPP
    description: Invoice Payment Provider. Endpoints for those who display and process invoices on behalf of recipients.
schemes:
  - https
securityDefinitions:
  apiKeyHeader:
    type: apiKey
    name: Ocp-Apim-Subscription-Key
    in: header
  apiKeyQuery:
    type: apiKey
    name: subscription-key
    in: query
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
paths:
  /recipients/tokens:
    post:
      description: |-
        Request a `recipientToken` by providing either the recipients Norwegian
        national identification or mobile number.

        We have created a few test users, please contact integration@vipps.no
        to get details for your test user.
      operationId: Request_Recipient_Token_v1
      summary: Request recipient token
      tags:
        - IPP
      parameters:
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the client_id and client_secret of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
        - name: recipientResolve
          in: body
          schema:
            $ref: '#/definitions/RecipientResolve'
      consumes:
        - application/json
      responses:
        '200':
          description: Recipient token
          schema:
            $ref: '#/definitions/RecipientsTokensPost200ApplicationJsonResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Recipient not Found
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      produces:
        - application/json
  /invoices:
    get:
      description: |-
        List all invoices for a user identified by the national identification number. May optionally be filtered by the described query parameters.
        * The invoices are not guaranteed to be sorted.
        * Currently the number of returned invoices is not limited. i.e. there
          is currently no paging.
      operationId: List_Invoices_v1
      summary: List invoices
      tags:
        - IPP
      parameters:
        - name: state
          in: query
          description: '**Not yet implemented!** Filter invoices by state. Default is "open", which returns both "created" and "fetched" invoices.'
          type: string
          default: open
          enum:
            - all
            - open
            - created
            - fetched
            - processed
            - deleted
        - name: vippsinvoice-recipienttoken
          in: header
          description: Recipient token. Issued by vipps.
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the client_id and client_secret of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/invoiceOutArray'
        '204':
          description: Empty result. No matching invoices.
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InvoicesGet500ApplicationJsonResponse'
      produces:
        - application/json
  /invoices/count:
    get:
      description: Returns the number of open invoices for a user.
      operationId: InvoiceCount
      summary: Count invoices for a user
      tags:
        - IPP
      parameters:
        - name: state
          in: query
          description: '**Not yet implemented!** Filter invoices by state. Default is "open", which returns both "created" and "fetched" invoices.'
          type: string
          default: open
          enum:
            - all
            - open
            - created
            - fetched
            - processed
            - deleted
        - name: vippsinvoice-recipienttoken
          in: header
          description: Recipient token. Issued by vipps.
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the `client_id` and `client_secret` of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InvoicesCountGet200ApplicationJsonResponse'
          examples:
            application/json: '42'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/InvoicesCountGet500ApplicationJsonResponse'
      produces:
        - application/json
  '/invoices/{invoiceId}':
    get:
      description: 'Returns a single invoice identified by its unique id. This is used to verify the state of an invoice, e.g. if it has been validated and now is available for recipients.'
      operationId: Get_Single_Invoice_v1
      summary: Get a single invoice
      tags:
        - IPP
      parameters:
        - name: invoiceId
          in: path
          description: The unique invoice id.
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the client_id and client_secret of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/invoiceOut'
        '404':
          description: Invoice not found
      produces:
        - application/json
  '/invoices/{invoiceId}/status/approved':
    put:
      description: |-
        Mark an invoice as approved. Approved means that a recipient has actively approved the invoice and the IPP has/will initiate a payment.
        It is the responsibility of the IPP to set the status back to pending if either the payment fails or the recipient cancels the payment.
      operationId: Change_Status_To_Approved_v1
      summary: Change status to approved
      tags:
        - IPP
      parameters:
        - name: invoiceId
          in: path
          description: The unique invoice id.
          required: true
          type: string
        - name: If-Match
          in: header
          description: Property for optimistic concurrency control. Expects the etag of the last known invoice status. Status updates are only performed if the provided etag matches with the etag of the current status.
          required: true
          type: string
        - name: Idempotency-Key
          in: header
          description: |-
            Unique identifier for the requested state transition, provided by the caller. This idempotency key is essential to guarantee idempotent behaviour.
            Do not use the same idempotency key for multiple transactions.
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the client_id and client_secret of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Body'
      consumes:
        - application/json
      responses:
        '201':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Invoice not found
      produces:
        - application/json
  '/invoices/{invoiceId}/status/pending':
    put:
      description: 'Mark an invoice as pending. For example if a payment fails or a recipient decides to cancel a payment, the status can be set back to pending so that the invoice becomes visible for the recipient and other IPPs again.'
      operationId: Change_Status_To_Pending_v1
      summary: Change status to pending
      tags:
        - IPP
      parameters:
        - name: invoiceId
          in: path
          description: The unique invoice id.
          required: true
          type: string
        - name: If-Match
          in: header
          description: Property for optimistic concurrency control. Expects the etag of the last known invoice status. Status updates are only performed if the provided etag matches with the etag of the current status.
          required: true
          type: string
        - name: Idempotency-Key
          in: header
          description: |-
            Unique identifier for the requested state transition, provided by the caller. This idempotency key is essential to guarantee idempotent behaviour.
            Do not use the same idempotency key for multiple transactions.
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the client_id and client_secret of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Invoice not found
      produces:
        - application/json
  '/invoices/{invoiceId}/status/deleted':
    put:
      description: |-
        Delete an invoice. A recipient may delete an invoice to indicate the he does not intent to approve and pay an invoice.
        A deleted invoice is removed from the list of pending invoices for the recipient on _all_ channels.
        An invoice can be deleted if it currently is the state `pending` or `approved`. If it currently is in the state `approved`, the linked payment must be canceled. Hence, it is up to the IPP if they expose this functionality to the recipient.
      operationId: Delete_Invoice_v1
      summary: Delete invoice
      tags:
        - IPP
      parameters:
        - name: invoiceId
          in: path
          description: The unique invoice id.
          required: true
          type: string
        - name: If-Match
          in: header
          description: Property for optimistic concurrency control. Expects the etag of the last known invoice status. Status updates are only performed if the provided etag matches with the etag of the current status.
          required: true
          type: string
        - name: Idempotency-Key
          in: header
          description: |-
            Unique identifier for the requested state transition, provided by the caller. This idempotency key is essential to guarantee idempotent behaviour.
            Do not use the same idempotency key for multiple transactions.
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the client_id and client_secret of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Invoice not found
      produces:
        - application/json
  '/invoices/{invoiceId}/commercial-invoice':
    get:
      description: Returns a time-limited URL to the commercial invoice document for the given invoice. This URL typically points to a third-party invoice hotel that hosts the document. The third-party is responsible for validating the JWT.
      operationId: Get_Commercial_Invoice_Document_v1
      summary: Get commercial invoice document
      tags:
        - IPP
      parameters:
        - name: invoiceId
          in: path
          description: The unique invoice id.
          required: true
          type: string
        - name: mimeType
          in: query
          description: Mime type to retrieve. E.g. application/pdf
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the client_id and client_secret of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/commercialInvoiceUrlOut'
        '403':
          description: Not allowed to access the invoice
        '404':
          description: Invoice not found
        '500':
          description: Server error. E.g. if JWT generation fails.
      produces:
        - application/json
  '/invoices/{invoiceId}/attachments/{attachmentId}':
    get:
      description: Returns a time-limited URL to a single attachment for an invoice. This URL typically points to a third-party invoice hotel that hosts the document. The third-party is responsible for validating the JWT.
      operationId: Get_Attachment_For_Invoice_v1
      summary: Get attachment for invoice
      tags:
        - IPP
      parameters:
        - name: invoiceId
          in: path
          description: The unique invoice id.
          required: true
          type: string
        - name: attachmentId
          in: path
          description: The unique attachment id.
          required: true
          type: string
        - name: mimeType
          in: query
          description: Mime type to retrieve. E.g. application/pdf
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization token is obtained from Access Token service call based on the client_id and client_secret of the registered application.
          required: true
          type: string
          enum:
            - bearer <access_token>
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/attachmentUrlOut'
        '403':
          description: Not allowed to access the invoice or attachment
        '404':
          description: Invoice or attachment not found
        '500':
          description: Server error. E.g. if JWT generation fails.
      produces:
        - application/json
definitions:
  recipientToken:
    type: object
    properties:
      recipientToken:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
  invoiceIn:
    type: object
    description: Invoice document which is sent to our servers.
    required:
      - recipientToken
      - paymentInformation
      - due
      - amount
      - subject
      - invoiceType
    properties:
      recipientToken:
        type: string
        description: token received is obtained by calling the endpoint to resolve a recipient
      paymentInformation:
        type: object
        required:
          - type
          - value
          - account
        properties:
          type:
            type: string
            enum:
              - kid
              - message
            example: kid
          value:
            type: string
            example: '1234567890128'
          account:
            type: string
            example: '12345678903'
      invoiceType:
        type: string
        enum:
          - invoice
          - paymentReminder
          - debtCollectionWarning
          - debtCollectionNotice
          - noticeOfLegalProceedings
          - debtCollectionReminder
          - creditNote
        example: invoice
      due:
        type: string
        format: date-time
        description: When an invoice is due
        example: '2023-03-13T15:00:00+00:00'
      amount:
        type: integer
        description: Amount by lowest subdivision(Ã¸re)
        example: 25043
      minAmount:
        type: integer
        description: Minimum allowed amount to pay by lowest subdivision(Ã¸re)
        example: 25043
      subject:
        type: string
        description: A textual subject for the receipient of the invoice
        example: Bompasseringer
      issuerName:
        type: string
        description: Organization name of issuer
        example: Lister Bompengeselskap
      commercialInvoice:
        type: array
        description: 'Conceptually only one invoice, but it can have multiple representations. The issuer is advised to provide the commercial invoice in multiple formats (i.e. different MIME types) if possible. This will make it easier provide the user and IPP different ways of showing the invoice'
        items:
          type: object
          properties:
            mimeType:
              type: string
              description: MIME type of commercial invoice document
              example: application/pdf
            url:
              type: string
              description: URL of commercial invoice
              example: 'https://www.example.com/08fd5360-e218-4658-894f-4f37649e7df7/comminv.pdf'
      attachments:
        type: array
        description: Invoice attachments
        items:
          $ref: '#/definitions/attachmentIn'
      issuerIconUrl:
        type: string
        description: URL to invoice issuer's logo
        example: 'https://www.example.com/logos/lister.png'
  commercialInvoiceUrlOut:
    description: Generated URL for commercial invoice
    type: object
    properties:
      url:
        type: string
        example: 'https://invoice-hotel.example.org/123456-abcdef-7890.pdf?token=eyJh.TY3ODk.SflKxw_adQssw5c'
  attachmentUrlOut:
    description: Generated URL for attachment
    type: object
    properties:
      url:
        type: string
        example: 'https://invoice-hotel.example.org/123456-abcdef-7890.pdf?token=eyJh.TY3ODk.SflKxw_adQssw5c'
  attachmentIn:
    description: An incoming attachment related to an invoice
    type: object
    required:
      - title
      - urls
    properties:
      title:
        type: string
        example: Ferry
      urls:
        type: array
        items:
          type: object
          properties:
            url:
              type: string
              example: 'https://invoice-hotel.example.org/invoice/42.pdf'
            mimeType:
              type: string
              example: application/pdf
  attachmentOut:
    description: A list of optional attachments related to an invoice
    type: object
    required:
      - id
      - title
      - mimeTypes
    properties:
      id:
        type: string
        example: 1
      title:
        type: string
        example: Ferry
      mimeTypes:
        type: array
        items:
          type: string
          example: application/pdf
  invoiceOut:
    description: 'Invoice document which is returned from our servers. The `invoiceId` consists of the prefix `orgno-no` (for all Norwegian organizations), the actual organization number and the reference number for this invoice.'
    type: object
    properties:
      invoiceId:
        type: string
        example: orgno-no.999999999.20180001
      paymentInformation:
        type: object
        properties:
          type:
            type: string
            enum:
              - kid
              - message
            example: kid
          value:
            type: string
            example: '1234567890128'
          account:
            type: string
            example: '12345678903'
      invoiceType:
        type: string
        enum:
          - invoice
          - paymentReminder
          - debtCollectionWarning
          - debtCollectionNotice
          - noticeOfLegalProceedings
          - debtCollectionReminder
          - creditNote
        example: invoice
      due:
        type: string
        format: date-time
        description: When an invoice is due
        example: '2023-03-13T15:00:00+00:00'
      amount:
        type: integer
        description: Amount by lowest subdivision (Ã¸re)
        example: 25043
      minAmount:
        type: integer
        description: 'Minimum allowed amount to pay by lowest subdivision (Ã¸re). If this is set, it indicates that this invoice can be paid with any amount between and including `minAmount` and `amount .'
        example: 25043
      subject:
        type: string
        description: A textual subject for the receipient of the invoice
        example: Bompasseringer
      issuerName:
        type: string
        description: Organization name of issuer
        example: Lister Bompengeselskap
      recipient:
        type: object
        properties:
          identType:
            type: string
            enum:
              - nin-no
              - msisdn
            description: Identification type used when the invoice was issued. One of the supported identification types.
            example: msisdn
          identValue:
            type: string
            description: The value used to identify the invoice recipient when the invoice was first issued.
            example: 4740040040
          resolvedAt:
            type: string
            format: date-time
            description: When the recipient was resolved
            example: '2018-03-13T16:00:00Z'
      commercialInvoice:
        type: array
        description: 'Conceptually only one invoice, but it can have multiple representations. The issuer is advised to provide the commercial invoice in multiple formats (i.e. different MIME types) if possible. This will make it easier provide the user and IPP different ways of showing the invoice.'
        items:
          type: object
          properties:
            mimeType:
              type: string
              description: MIME type of commercial invoice document
              example: application/pdf
            url:
              type: string
              description: URL of the commercial invoice provided by the IPP. Not meant for direct use the specialized endpoint for retrieving a URL with a token.
              example: 'https://invoice-hotel.example.org/123456-abcdef-7890.pdf'
      attachments:
        type: array
        description: Invoice attachments
        items:
          $ref: '#/definitions/attachmentOut'
      issuerIconUrl:
        type: string
        description: URL to invoice issuer's logo
        example: 'https://www.example.com/logos/lister.png'
      status:
        type: object
        properties:
          lastModified:
            type: string
            format: date-time
          state:
            type: string
            enum:
              - created
              - rejected
              - pending
              - expired
              - approved
              - deleted
              - revoked
            description: Status of the invoice. See the documentation in the introduction to this file.
          due:
            type: string
            format: date-time
            description: When the user has set the payment to be due
          amount:
            type: integer
            description: Amount the user has set to be paid by lowest subdivision(Ã¸re)
          etag:
            type: string
            description: System generated property used for optimistic concurrency control.
      created:
        type: string
        format: date-time
        description: When an invoice was created
        example: '2018-03-13T15:00:00+00:00'
  RecipientResolve:
    type: object
    properties:
      type:
        type: string
        enum:
          - nin-no
          - msisdn
        description: Currently resolving by the Norwegian national identification number (`nin-no`) and the mobile phone number (`msisdn`) is supported.
      value:
        type: string
        description: Either the Norwegian national identification number or the mobile phone number.
  Error:
    type: object
    properties:
      error:
        type: object
        properties:
          type:
            type: string
            description: A URI reference that identifies the problem type.
            example: 'https://vipps.no/invoice/v1/problems/invalid-invoice-id'
          title:
            type: string
            description: 'A short, human-readable summary of the problem type.'
            example: The invoice id is invalid.
          detail:
            type: string
            description: A human-readable explanation specific to this occurrence of the problem.
            example: 'You tried to call the endpoint GET:/invoices/{invoiceId} with the invoice id **invoice-1**. This is invalid due to the following reasons: missing issuer ident-type, missing issuer ident-value.'
          instance:
            type: string
            description: A URI reference that identifies the specific occurrence of the problem.  It may or may not yield further information if dereferenced.
  JsonWebKeySet:
    title: JSON Web Key Set
    type: object
    properties:
      keys:
        type: array
        items:
          $ref: '#/definitions/JsonWebKey'
  JsonWebKey:
    title: JSON Web Key
    type: object
    properties:
      keys:
        type: array
        items:
          $ref: '#/definitions/JsonWebKey'
      kty:
        type: string
      use:
        type: string
      kid:
        type: string
      alg:
        type: string
      crv:
        type: string
      x:
        type: string
      'y':
        type: string
      d:
        type: string
      'n':
        type: string
      e:
        type: string
      k:
        type: string
    required:
      - kty
  RecipientsTokensPost200ApplicationJsonResponse:
    type: object
    properties:
      recipientToken:
        type: string
        description: the recipient token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MzQ1MDMwMjMsImlhdCI6MTUzNDUwMjEyMywiaXNzIjoidmlwcHNpbnZvaWNlLnZpcHBzLm5vL2FwaS92MS9yZWNpcGllbnRzL3Rva2VucyIsIm5iZiI6MTUzNDUwMjEyMywic3ViIjoibmluLW5vLjA3MTI2MjAwMjU1In0.z0yJY8MXO4rDOGTA743fh4BOdnnCoVZLmdzi_goBipU
  invoiceOutArray:
    type: array
    items:
      $ref: '#/definitions/invoiceOut'
  InvoicesGet500ApplicationJsonResponse:
    type: object
    properties:
      Error:
        type: string
        example: Database error.
  InvoicesCountGet200ApplicationJsonResponse:
    type: integer
    example: 42
  InvoicesCountGet500ApplicationJsonResponse:
    type: object
    properties:
      Error:
        type: string
        example: Database error.
  Body:
    type: object
    properties:
      due:
        type: string
        format: date-time
        description: When the user has set the payment to be due
        example: '2023-03-13T15:00:00+00:00'
      amount:
        type: integer
        description: Amount the user has set to be paid by lowest subdivision (Ã¸re)
        example: 25043
